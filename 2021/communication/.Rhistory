geom_text(aes(label=turns), vjust=-0.25, color="black",
position = position_dodge(0.9), size=3.5)+
facet_wrap(~name, strip.position = "middle", scales = "free_x") +
scale_fill_brewer(palette="Paired")+
labs(title = "Team Canis Major no. of Turns per person (grouped by days)")+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
cm7
# turns
cm7 <- ggplot(data=df3[which(df3$name!="TA"),], aes(x=day, y=turns, group=name,fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.92)) +
geom_text(aes(label=turns), vjust=-0.25, color="black",
position = position_dodge(0.9), size=3.5)+
facet_wrap(~name, strip.position = "center", scales = "free_x") +
scale_fill_brewer(palette="Paired")+
labs(title = "Team Canis Major no. of Turns per person (grouped by days)")+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
cm7
library(ggplot2)
library(reshape2)
library(xtable)
library(data.table)
# read in the data
cygnus.utter <- read.csv("team_cygnus.csv")
unique(cygnus.utter[["talking"]])
# Team Cygnus #
# declare variables
g = as.integer(0)
g_t = as.integer(0)
g_nt = as.integer(0)
g_w = as.integer(0)
a = as.integer(0)
a_t = as.integer(0)
a_nt = as.integer(0)
a_nt = as.integer(0)
a_w = as.integer(0)
t = as.integer(0)
t_t = as.integer(0)
t_w = as.integer(0)
# create data frame
cydata.utter <- data.frame(day=numeric(), name=character(), utterances=numeric(), turns=numeric(), turnsnt=numeric(), wutterances=numeric(), wturns=numeric(), wturnsnt=numeric())
# parse through data and count utterances and turns
for (x in cygnus.utter$id){
if (cygnus.utter[x,"talking"] == "George"){
g = g + 1
g_w = g_w + cygnus.utter[x,"words"]
if(cygnus.utter[x+1,"talking"] != "George" || x == length(t(cygnus.utter[1]))){
g_t = g_t + 1
if(cygnus.utter[x+1,"talking"] != "TA" || x == length(t(cygnus.utter[1]))){
g_nt = g_nt + 1
}
}
}
else if (cygnus.utter[x,"talking"] == "Alfredo"){
a = a + 1
a_w = a_w + cygnus.utter[x,"words"]
if(cygnus.utter[x+1,"talking"] != "Alfredo" || x == length(t(cygnus.utter[1]))){
a_t = a_t + 1
if(cygnus.utter[x+1,"talking"] != "TA" || x == length(t(cygnus.utter[1]))){
a_nt = a_nt + 1
}
}
}
else{
t = t + 1
t_w = t_w + cygnus.utter[x,"words"]
if(cygnus.utter[x+1,"talking"] != "TA" || x == length(t(cygnus.utter[1]))){
t_t = t_t + 1
}
}
# add to data frame by each day
if(cygnus.utter[x,"day"] != cygnus.utter[x+1,"day"] || x == length(t(cygnus.utter[1]))){
cydata.utter[nrow(cydata.utter) + 1,] = c(cygnus.utter[x,"day"], "George", g, g_t, g_nt, round(g_w/g, digits = 0), round(g_w/g_t, digits = 0), round(g_w/g_nt, digits = 0))
cydata.utter[nrow(cydata.utter) + 1,] = c(cygnus.utter[x,"day"], "Alfredo", a, a_t, a_nt, round(a_w/a, digits = 0), round(a_w/a_t, digits = 0), round(a_w/a_nt, digits = 0))
cydata.utter[nrow(cydata.utter) + 1,] = c(cygnus.utter[x,"day"], "TA", t, t_t, t_t, round(t_w/t, digits = 0), round(t_w/t_t, digits = 0), round(t_w/t_t, digits = 0))
g = 0
g_t = 0
g_nt = 0
g_w = 0
a = 0
a_t = 0
a_nt = 0
a_w = 0
t = 0
t_t = 0
t_w = 0
}
}
# making sure data is numeric
cydata.utter$day <- as.numeric(as.character(cydata.utter$day))
cydata.utter$utterances <- as.numeric(as.character(cydata.utter$utterances))
cydata.utter$turns <- as.numeric((as.character(cydata.utter$turns)))
cydata.utter$turnsnt <- as.numeric((as.character(cydata.utter$turnsnt)))
cydata.utter$wutterances <- as.numeric(as.character(cydata.utter$wutterances))
cydata.utter$wturns <- as.numeric((as.character(cydata.utter$wturns)))
cydata.utter$wturnsnt <- as.numeric((as.character(cydata.utter$wturnsnt)))
# combined plots
df1 <- data.frame(cydata.utter[, c("day", "name", "turns")], "indv")
colnames(df1) <- c('day','name','turns', 'type')
df2 <- data.frame(cydata.utter[, c("day", "name", "turnsnt")], "team")
colnames(df2) <- c('day','name','turns', 'type')
df3 <- rbind(df1,df2)
# turns
c7 <- ggplot(data=df3[which(df3$name!="TA"),], aes(x=name, y=turns, group=day,fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.92)) +
#geom_text(aes(label=day), vjust=1.0, color="white",
#position = position_dodge(0.9), size=3.5)+
scale_fill_brewer(palette="Paired")+
labs(title = "Team Cygnus no. of Turns per person")+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
c7
df1 <- data.frame(cydata.utter[, c("day", "name", "turns")], "indv")
colnames(df1) <- c('day','name','turns', 'type')
df2 <- data.frame(cydata.utter[, c("day", "name", "turnsnt")], "team")
colnames(df2) <- c('day','name','turns', 'type')
df3 <- rbind(df1,df2)
# turns
c7 <- ggplot(data=df3[which(df3$name!="TA"),], aes(x=day, y=turns, group=name,fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.92)) +
geom_text(aes(label=turns), vjust=-0.25, color="black",
position = position_dodge(0.9), size=3.5)+
facet_wrap(~name, strip.position = "center", scales = "free_x") +
scale_fill_brewer(palette="Paired")+
labs(title = "Team Cygnus no. of Turns per person")+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
c7
c7 <- ggplot(data=df3[which(df3$name!="TA"),], aes(x=day, y=turns, group=name,fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.92)) +
geom_text(aes(label=turns), vjust=-0.25, color="black",
position = position_dodge(0.9), size=3.5)+
facet_wrap(~name, strip.position = "top", scales = "free_x") +
scale_fill_brewer(palette="Paired")+
labs(title = "Team Cygnus no. of Turns per person")+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
c7
# turns
c7 <- ggplot(data=df3[which(df3$name!="TA"),], aes(x=day, y=turns, group=name,fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.92)) +
geom_text(aes(label=turns), vjust=-0.25, color="black",
position = position_dodge(0.9), size=3.5)+
facet_wrap(~name, strip.position = "left", scales = "free_x") +
scale_fill_brewer(palette="Paired")+
labs(title = "Team Cygnus no. of Turns per person")+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
c7
library(ggplot2)
library(reshape2)
library(xtable)
library(data.table)
# read in the data
taurus.utter <- read.csv("team_taurus.csv")
unique(taurus.utter[["talking"]])
# Team Taurus #
# declare variables
m = as.integer(0)
m_t = as.integer(0)
m_nt = as.integer(0)
m_w = as.integer(0)
e = as.integer(0)
e_t = as.integer(0)
e_nt = as.integer(0)
e_w = as.integer(0)
t = as.integer(0)
t_t = as.integer(0)
t_w = as.integer(0)
# create data frame
tadata.utter <- data.frame(day=numeric(), name=character(), utterances=numeric(), turns=numeric(), turnsnt=numeric(), wutterances=numeric(), wturns=numeric(), wturnsnt=numeric())
# parse through data and count utterances and turns
for (x in taurus.utter$id){
if (taurus.utter[x,"talking"] == "Michael"){
m = m + 1
m_w = m_w + taurus.utter[x,"words"]
if(taurus.utter[x+1,"talking"] != "Michael" || x == length(t(taurus.utter[1]))){
m_t = m_t + 1
if(taurus.utter[x+1,"talking"] != "TA" || x == length(t(taurus.utter[1]))){
m_nt = m_nt + 1
}
}
}
else if (taurus.utter[x,"talking"] == "Edward"){
e = e + 1
e_w = e_w + taurus.utter[x,"words"]
if(taurus.utter[x+1,"talking"] != "Edward" || x == length(t(taurus.utter[1]))){
e_t = e_t + 1
if(taurus.utter[x+1,"talking"] != "TA" || x == length(t(taurus.utter[1]))){
e_nt = e_nt + 1
}
}
}
else{
t = t + 1
t_w = t_w + taurus.utter[x,"words"]
if(taurus.utter[x+1,"talking"] != "TA" || x == length(t(taurus.utter[1]))){
t_t = t_t + 1
}
}
# add to data frame by each day
if(taurus.utter[x,"day"] != taurus.utter[x+1,"day"] || x == length(t(taurus.utter[1]))){
tadata.utter[nrow(tadata.utter) + 1,] = c(taurus.utter[x,"day"], "Michael", m, m_t, m_nt, round(m_w/m, digits = 0), round(m_w/m_t, digits = 0), round(m_w/m_nt, digits = 0))
tadata.utter[nrow(tadata.utter) + 1,] = c(taurus.utter[x,"day"], "Edward", e, e_t, e_nt, round(e_w/e, digits = 0), round(e_w/e_t, digits = 0), round(e_w/e_nt, digits = 0))
tadata.utter[nrow(tadata.utter) + 1,] = c(taurus.utter[x,"day"], "TA", t, t_t, t_t, round(t_w/t, digits = 0), round(t_w/t_t, digits = 0), round(t_w/t_t, digits = 0))
m = 0
m_t = 0
m_nt = 0
m_w = 0
e = 0
e_t = 0
e_nt = 0
e_w = 0
t = 0
t_t = 0
t_w = 0
}
}
# making sure data is numeric
tadata.utter$day <- as.numeric(as.character(tadata.utter$day))
tadata.utter$utterances <- as.numeric(as.character(tadata.utter$utterances))
tadata.utter$turns <- as.numeric((as.character(tadata.utter$turns)))
tadata.utter$turnsnt <- as.numeric((as.character(tadata.utter$turnsnt)))
tadata.utter$wutterances <- as.numeric(as.character(tadata.utter$wutterances))
tadata.utter$wturns <- as.numeric((as.character(tadata.utter$wturns)))
tadata.utter$wturnsnt <- as.numeric((as.character(tadata.utter$wturnsnt)))
# combined plots
df1 <- data.frame(tadata.utter[, c("day", "name", "turns")], "indv")
colnames(df1) <- c('day','name','turns', 'type')
df2 <- data.frame(tadata.utter[, c("day", "name", "turnsnt")], "team")
colnames(df2) <- c('day','name','turns', 'type')
df3 <- rbind(df1,df2)
# turns
t7 <- ggplot(data=df3[which(df3$name!="TA"),], aes(x=name, y=turns, group=day,fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.92)) +
#geom_text(aes(label=day), vjust=1.0, color="white",
#position = position_dodge(0.9), size=3.5)+
scale_fill_brewer(palette="Paired")+
labs(title = "Team Taurus no. of Turns per person")+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
t7
t7 <- ggplot(data=df3[which(df3$name!="TA"),], aes(x=day, y=turns, group=name,fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.92)) +
geom_text(aes(label=turns), vjust=-0.25, color="black",
position = position_dodge(0.9), size=3.5)+
facet_wrap(~name, strip.position = "bottom", scales = "free_x") +
scale_fill_brewer(palette="Paired")+
labs(title = "Team Taurus no. of Turns per person")+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
t7
library(ggplot2)
library(reshape2)
library(xtable)
library(data.table)
# read in the data
orion.utter <- read.csv("team_orion.csv")
unique(orion.utter[["talking"]])
# Team Orion #
# declare variables
an = as.integer(0)
an_t = as.integer(0)
an_nt = as.integer(0)
an_w = as.integer(0)
ai = as.integer(0)
ai_t = as.integer(0)
ai_nt = as.integer(0)
ai_w = as.integer(0)
t = as.integer(0)
t_t = as.integer(0)
t_w = as.integer(0)
# create data frame
ordata.utter <- data.frame(day=numeric(), name=character(), utterances=numeric(), turns=numeric(), turnsnt=numeric(), wutterances=numeric(), wturns=numeric(), wturnsnt=numeric())
# parse through data and count utterances and turns
for (x in orion.utter$id){
if (orion.utter[x,"talking"] == "Arthur"){
an = an + 1
an_w = an_w + orion.utter[x,"words"]
if(orion.utter[x+1,"talking"] != "Arthur" || x == length(t(orion.utter[1]))){
an_t = an_t + 1
if(orion.utter[x+1,"talking"] != "TA" || x == length(t(orion.utter[1]))){
an_nt = an_nt + 1
}
}
}
else if (orion.utter[x,"talking"] == "Adam"){
ai = ai + 1
ai_w = ai_w + orion.utter[x,"words"]
if(orion.utter[x+1,"talking"] != "Adam" || x == length(t(orion.utter[1]))){
ai_t = ai_t + 1
if(orion.utter[x+1,"talking"] != "TA" || x == length(t(orion.utter[1]))){
ai_nt = ai_nt + 1
}
}
}
else{
t = t + 1
t_w = t_w + orion.utter[x,"words"]
if(orion.utter[x+1,"talking"] != "TA" || x == length(t(orion.utter[1]))){
t_t = t_t + 1
}
}
# add to data frame by each day
if(orion.utter[x,"day"] != orion.utter[x+1,"day"] || x == length(t(orion.utter[1]))){
ordata.utter[nrow(ordata.utter) + 1,] = c(orion.utter[x,"day"], "Arthur", an, an_t, an_nt, round(an_w/an, digits = 0), round(an_w/an_t, digits = 0), round(an_w/an_nt, digits = 0))
ordata.utter[nrow(ordata.utter) + 1,] = c(orion.utter[x,"day"], "Adam", ai, ai_t, ai_nt, round(ai_w/ai, digits = 0), round(ai_w/ai_t, digits = 0), round(ai_w/ai_nt, digits = 0))
ordata.utter[nrow(ordata.utter) + 1,] = c(orion.utter[x,"day"], "TA", t, t_t, t_t, round(t_w/t, digits = 0), round(t_w/t_t, digits = 0), round(t_w/t_t, digits = 0))
an = 0
an_t = 0
an_nt = 0
an_w = 0
ai = 0
ai_t = 0
ai_nt = 0
ai_w = 0
t = 0
t_t = 0
t_w = 0
}
}
# making sure data is numeric
ordata.utter$day <- as.numeric(as.character(ordata.utter$day))
ordata.utter$utterances <- as.numeric(as.character(ordata.utter$utterances))
ordata.utter$turns <- as.numeric((as.character(ordata.utter$turns)))
ordata.utter$turnsnt <- as.numeric((as.character(ordata.utter$turnsnt)))
ordata.utter$wutterances <- as.numeric(as.character(ordata.utter$wutterances))
ordata.utter$wturns <- as.numeric((as.character(ordata.utter$wturns)))
ordata.utter$wturnsnt <- as.numeric((as.character(ordata.utter$wturnsnt)))
# combined plots
df1 <- data.frame(ordata.utter[, c("day", "name", "turns")], "indv")
colnames(df1) <- c('day','name','turns', 'type')
df2 <- data.frame(ordata.utter[, c("day", "name", "turnsnt")], "team")
colnames(df2) <- c('day','name','turns', 'type')
df3 <- rbind(df1,df2)
# turns
o7 <- ggplot(data=df3[which(df3$name!="TA"),], aes(x=name, y=turns, group=day,fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.92)) +
#geom_text(aes(label=day), vjust=1.0, color="white",
#position = position_dodge(0.9), size=3.5)+
scale_fill_brewer(palette="Paired")+
labs(title = "Team Orion no. of Turns per person")+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
o7
o7 <- ggplot(data=df3[which(df3$name!="TA"),], aes(x=day, y=turns, group=name,fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.92)) +
geom_text(aes(label=turns), vjust=-0.25, color="black",
position = position_dodge(0.9), size=3.5)+
facet_wrap(~name, strip.position = "bottom", scales = "free_x") +
scale_fill_brewer(palette="Paired")+
labs(title = "Team Orion no. of Turns per person")+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
o7
# turns
o7 <- ggplot(data=df3[which(df3$name!="TA"),], aes(x=day, y=turns, group=name,fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.92)) +
geom_text(aes(label=turns), vjust=-0.25, color="black",
position = position_dodge(0.9), size=3.5)+
facet_wrap(~name, strip.position = "left", scales = "free_x") +
scale_fill_brewer(palette="Paired")+
labs(title = "Team Orion no. of Turns per person")+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
o7
# turns
o7 <- ggplot(data=df3[which(df3$name!="TA"),], aes(x=day, y=turns, group=name,fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.92)) +
geom_text(aes(label=turns), vjust=-0.25, color="black",
position = position_dodge(0.9), size=3.5)+
facet_wrap(~name, strip.position = "left", scales = "free_x") +
scale_fill_brewer(palette="Paired")+
labs(title = "Team Orion no. of Turns per person")+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
o7
# turns
o7 <- ggplot(data=df3[which(df3$name!="TA"),], aes(x=day, y=turns, group=name,fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.92)) +
geom_text(aes(label=turns), vjust=-0.25, color="black",
position = position_dodge(0.9), size=3.5)+
facet_wrap(~name, strip.position = "right", scales = "free_x") +
scale_fill_brewer(palette="Paired")+
labs(title = "Team Orion no. of Turns per person")+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
o7
library(ggplot2)
library(reshape2)
library(xtable)
library(data.table)
# read in the data
lyra.utter <- read.csv("team_lyra.csv")
unique(lyra.utter[["talking"]])
# Team Lyra #
# declare variables
j = as.integer(0)
j_t = as.integer(0)
j_nt = as.integer(0)
j_w = as.integer(0)
s = as.integer(0)
s_t = as.integer(0)
s_nt = as.integer(0)
s_w = as.integer(0)
l = as.integer(0)
l_t = as.integer(0)
l_nt = as.integer(0)
l_w = as.integer(0)
t = as.integer(0)
t_t = as.integer(0)
t_w = as.integer(0)
# create data frame
lydata.utter <- data.frame(day=numeric(), name=character(), utterances=numeric(), turns=numeric(), turnsnt=numeric(), wutterances=numeric(), wturns=numeric(), wturnsnt=numeric())
# parse through data and count utterances and turns
for (x in lyra.utter$id){
if (lyra.utter[x,"talking"] == "Justin"){
j = j + 1
j_w = j_w + lyra.utter[x,"words"]
if(lyra.utter[x+1,"talking"] != "Justin" || x == length(t(lyra.utter[1]))){
j_t = j_t + 1
if(lyra.utter[x+1,"talking"] != "TA" || x == length(t(lyra.utter[1]))){
j_nt = j_nt + 1
}
}
}
else if (lyra.utter[x,"talking"] == "Shen"){
s = s + 1
s_w = s_w + lyra.utter[x,"words"]
if(lyra.utter[x+1,"talking"] != "Shen" || x == length(t(lyra.utter[1]))){
s_t = s_t + 1
if(lyra.utter[x+1,"talking"] != "TA" || x == length(t(lyra.utter[1]))){
s_nt = s_nt + 1
}
}
}
else if (lyra.utter[x,"talking"] == "Logan"){
l = l + 1
l_w = l_w + lyra.utter[x,"words"]
if(lyra.utter[x+1,"talking"] != "Logan" || x == length(t(lyra.utter[1]))){
l_t = l_t + 1
if(lyra.utter[x+1,"talking"] != "TA" || x == length(t(lyra.utter[1]))){
l_nt = l_nt + 1
}
}
}
else{
t = t + 1
t_w = t_w + lyra.utter[x,"words"]
if(lyra.utter[x+1,"talking"] != "TA" || x == length(t(lyra.utter[1]))){
t_t = t_t + 1
}
}
# add to data frame by each day
if(lyra.utter[x,"day"] != lyra.utter[x+1,"day"] || x == length(t(lyra.utter[1]))){
lydata.utter[nrow(lydata.utter) + 1,] = c(lyra.utter[x,"day"], "Justin", j, j_t, j_nt, round(j_w/j, digits = 0), round(j_w/j_t, digits = 0), round(j_w/j_nt, digits = 0))
lydata.utter[nrow(lydata.utter) + 1,] = c(lyra.utter[x,"day"], "Shen", s, s_t, s_nt, round(s_w/s, digits = 0), round(s_w/s_t, digits = 0), round(s_w/s_nt, digits = 0))
lydata.utter[nrow(lydata.utter) + 1,] = c(lyra.utter[x,"day"], "Logan", l, l_t, l_nt, round(l_w/l, digits = 0), round(l_w/l_t, digits = 0), round(l_w/l_nt, digits = 0))
lydata.utter[nrow(lydata.utter) + 1,] = c(lyra.utter[x,"day"], "TA", t, t_t, t_t, round(t_w/t, digits = 0), round(t_w/t_t, digits = 0), round(t_w/t_t, digits = 0))
j = 0
j_t = 0
j_nt = 0
j_w = 0
s = 0
s_t = 0
s_nt = 0
s_w = 0
l = 0
l_t = 0
l_nt = 0
l_w = 0
t = 0
t_t = 0
t_w = 0
}
}
# making sure data is numeric
lydata.utter$day <- as.numeric(as.character(lydata.utter$day))
lydata.utter$utterances <- as.numeric(as.character(lydata.utter$utterances))
lydata.utter$turns <- as.numeric((as.character(lydata.utter$turns)))
lydata.utter$turnsnt <- as.numeric((as.character(lydata.utter$turnsnt)))
lydata.utter$wutterances <- as.numeric(as.character(lydata.utter$wutterances))
lydata.utter$wturns <- as.numeric((as.character(lydata.utter$wturns)))
lydata.utter$wturnsnt <- as.numeric((as.character(lydata.utter$wturnsnt)))
# combined plots
df1 <- data.frame(lydata.utter[, c("day", "name", "turns")], "indv")
colnames(df1) <- c('day','name','turns', 'type')
df2 <- data.frame(lydata.utter[, c("day", "name", "turnsnt")], "team")
colnames(df2) <- c('day','name','turns', 'type')
df3 <- rbind(df1,df2)
# turns
l7 <- ggplot(data=df3[which(df3$name!="TA"),], aes(x=name, y=turns, group=day,fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.92)) +
#geom_text(aes(label=day), vjust=1.0, color="white",
#position = position_dodge(0.9), size=3.5)+
scale_fill_brewer(palette="Paired")+
labs(title = "Team Lyra no. of Turns per person")+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
l7
# turns
l7 <- ggplot(data=df3[which(df3$name!="TA"),], aes(x=day, y=turns, group=name,fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.92)) +
geom_text(aes(label=turns), vjust=-0.25, color="black",
position = position_dodge(0.9), size=3.5)+
facet_wrap(~name, strip.position = "top", scales = "free_x") +
scale_fill_brewer(palette="Paired")+
labs(title = "Team Lyra no. of Turns per person")+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
l7
